A. Pizza Metrics
--How many pizzas were ordered?
select count(*) from customer_orders;+----------+
| count(*) |
+----------+
|       14 |

--How many unique customer orders were made?

select count(distinct order_time) as unique_customer_orders
from customer_orders;
	
+------------------------+
| UNIQUE_CUSTOMER_ORDERS |
+------------------------+
|                     10 |
+------------------------+

--How many successful orders were delivered by each runner?
select runner_id,
count(order_id) as number_of_orders 
from runner_orders 
where cancellation is null 
group by runner_id ;

+-----------+------------------+
| runner_id | number_of_orders |
+-----------+------------------+
|         1 |                4 |
|         2 |                3 |
|         3 |                1 |
+-----------+------------------+

--How many of each type of pizza was delivered?
select pizza_id,count(order_id) from 
customer_orders where order_id
in (select order_id from runner_orders where cancellation is null ) group by pizza_id;

+----------+-----------------+
| pizza_id | count(order_id) |
+----------+-----------------+
|        1 |               9 |
|        2 |               3 |
+----------+-----------------+

--How many Vegetarian and Meatlovers were ordered by each customer?
select 
c.customer_id,
sum(case when c.pizza_id=1 then 1 else 0 end) as "MEATLOVERS",
sum(case when c.pizza_id=2 then 1 else 0 end) as "VEGETERIAN"
from 
customer_orders c  
join pizza_names p
on c.pizza_id=p.pizza_id
group by c.customer_id
order by c.customer_id;

+-------------+------------+------------+
| customer_id | MEATLOVERS | VEGETERIAN |
+-------------+------------+------------+
|         101 |          2 |          1 |
|         102 |          2 |          1 |
|         103 |          3 |          1 |
|         104 |          3 |          0 |
|         105 |          0 |          1 |
+-------------+------------+------------+

--What was the maximum number of pizzas delivered in a single order?

select a.order_id, count(*) max_pizzas_delivered
from customer_orders a join runner_orders b  
on a.order_id = b.order_id 
group by a.order_id
order by max_pizzas_delivered desc
limit 1;

+----------+----------------------+
| order_id | max_pizzas_delivered |
+----------+----------------------+
|        4 |                    3 |
+----------+----------------------+
 
--For each customer, how many delivered pizzas had at least 1 change and how many had no changes?

select a.customer_id, 
sum( case when exclusions is null and extras is null then 1 else 0 end) as "no changes",
sum( case when exclusions is not null or extras is not null then 1 else 0 end) as "at least 1 change"
from customer_orders  a join runner_orders b 
on a.order_id = b.order_id
where cancellation is null
group by a.customer_id
order by a.customer_id;

+-------------+------------+-------------------+
| customer_id | no changes | at least 1 change |
+-------------+------------+-------------------+
|         101 |          2 |                 0 |
|         102 |          3 |                 0 |
|         103 |          0 |                 3 |
|         104 |          1 |                 2 |
|         105 |          0 |                 1 |
+-------------+------------+-------------------+

--How many pizzas were delivered that had both exclusions and extras?

select count(co.order_id) as no_of_delivered_pizza
from customer_orders  co
where exists (select topping_id from pizza_toppings pt where co.extras=pt.topping_id ) 
and exists (select topping_id from pizza_toppings pt where co.exclusions=pt.topping_id)
and co.order_id
in (select order_id from runner_orders where cancellation is null)
group by customer_id

+-----------------------+
| no_of_delivered_pizza |
+-----------------------+
|                     1 |

--What was the total volume of pizzas ordered for each hour of the day?

select hour(order_time),count(order_id)as no_of_pizzas from customer_orders group by hour(order_time)
order by hour(order_time);
+------------------+--------------+
| hour(order_time) | no_of_pizzas |
+------------------+--------------+
|               11 |            1 |
|               13 |            3 |
|               18 |            3 |
|               19 |            1 |
|               21 |            3 |
|               23 |            3 |


--What was the volume of orders for each day of the week?

select dayofweek(order_time),count(order_id)as no_of_pizzas from customer_orders group by dayofweek(order_time) 
order by dayofweek(order_time);

+-----------------------+--------------+
| dayofweek(order_time) | no_of_pizzas |
+-----------------------+--------------+
|                     4 |            5 |
|                     5 |            3 |
|                     6 |            1 |
|                     7 |            5 |
+-----------------------+--------------+

B.Runner and Customer Experience

How many runners signed up for each 1 week period? (i.e. week starts 2021-01-01)

SELECT
WEEK(registration_date) AS Week,
COUNT(runner_id) AS numberofrunnerid
FROM runners
GROUP BY WEEK(registration_date)
ORDER BY WEEK(registration_date);

+------+------------------+
| Week | numberofrunnerid |
+------+------------------+
|    0 |                1 |
|    1 |                2 |
|    2 |                1 |
+------+------------------+

What was the average time in minutes it took for each runner to arrive at the Pizza Runner HQ to pickup the order?

SELECT 
b.RUNNER_ID,
minute(avg(TIMEDIFF(b.pickup_time,a.order_time)))as average
FROM CUSTOMER_ORDERS a  
JOIN RUNNER_ORDERS b
ON a.ORDER_ID = b.ORDER_ID
WHERE b.PICKUP_TIME IS NOT NULL 
GROUP BY b.RUNNER_ID
ORDER BY b.RUNNER_ID;

+-----------+---------+
| RUNNER_ID | average |
+-----------+---------+
|         1 |      15 |
|         2 |      23 |
|         3 |      10 |
+-----------+---------+

Is there any relationship between the number of pizzas and how long the order takes to prepare?

select p.cnt as pizza_count,
avg(p.diff) as average_minutes 
from 
		(
		SELECT 
		a.order_id,
		count(a.pizza_id) as cnt,
		minute(TIMEDIFF(b.pickup_time,a.order_time))as diff
		FROM CUSTOMER_ORDERS a  
		JOIN RUNNER_ORDERS b
		ON a.ORDER_ID = b.ORDER_ID
		WHERE b.distance is NOT NULL 
		GROUP BY a.order_id
		ORDER BY a.order_id) p
group by p.cnt; 

+-------------+-----------------+
| pizza_count | average_minutes |
+-------------+-----------------+
|           1 |         12.0000 |
|           2 |         18.0000 |
|           3 |         29.0000 |
+-------------+-----------------+

What was the average distance travelled for each customer?

SELECT 
a.customer_id,
avg(distance)
FROM CUSTOMER_ORDERS a  
JOIN RUNNER_ORDERS b
ON a.ORDER_ID = b.ORDER_ID
WHERE b.distance is NOT NULL 
GROUP BY a.customer_id
ORDER BY a.customer_id;

+-------------+--------------------+
| customer_id | avg(distance)      |
+-------------+--------------------+
|         101 |                 20 |
|         102 | 16.733333333333334 |
|         103 | 23.399999999999995 |
|         104 |                 10 |
|         105 |                 25 |



What was the difference between the longest and shortest delivery times for all orders?

select (max(p.delivery_times)-min(p.delivery_times)) as diff 
from 
       (SELECT 
		a.order_id,
		minute(TIMEDIFF(b.pickup_time,a.order_time))as delivery_time
		FROM CUSTOMER_ORDERS a  
		JOIN RUNNER_ORDERS b
		ON a.ORDER_ID = b.ORDER_ID
		WHERE b.distance is NOT NULL 
		GROUP BY a.order_id
		ORDER BY a.order_id
		)p
+------+
| diff |
+------+
|   19 |
+------+

What was the average speed for each runner for each delivery and do you notice any trend for these values?
select 
p.runner_id,
p.order_id,
round(avg(p.distance/p.delivery_time),2) as speed
from(
	    SELECT 
		a.order_id,
		b.runner_id,
		b.distance,
		minute(TIMEDIFF(b.pickup_time,a.order_time)) as delivery_time
		FROM CUSTOMER_ORDERS a  
		JOIN RUNNER_ORDERS b
		ON a.ORDER_ID = b.ORDER_ID
		WHERE b.distance is NOT NULL 
		GROUP BY a.order_id
		ORDER BY a.order_id)p
group by p.runner_id,p.order_id


+-----------+----------+-------+
| runner_id | order_id | speed |
+-----------+----------+-------+
|         1 |        1 |     2 |
|         1 |        2 |     2 |
|         1 |        3 |  0.64 |
|         2 |        4 |  0.81 |
|         3 |        5 |     1 |
|         2 |        7 |   2.5 |
|         2 |        8 |  1.17 |
|         1 |       10 |  0.67 |
+-----------+----------+-------+



What is the successful delivery percentage for each runner?


SELECT runner_id, 
COUNT(*),
 ROUND(100 * SUM(CASE WHEN distance is null THEN 0 ELSE 1 END) / COUNT(*), 0) AS success_perc
FROM runner_orders
GROUP BY runner_id;



+-----------+----------+--------------+
| runner_id | COUNT(*) | success_perc |
+-----------+----------+--------------+
|         1 |        4 |          100 |
|         2 |        4 |           75 |
|         3 |        2 |           50 |







